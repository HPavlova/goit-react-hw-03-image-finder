{"version":3,"sources":["components/Searchbar.jsx","components/ImageGalleryItem.jsx","components/Load.jsx","components/ImageGallery.jsx","components/Button.jsx","components/Modal.jsx","App.js","index.js"],"names":["Searchbar","state","query","handleNameChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","this","className","type","autoComplete","autoFocus","placeholder","name","onChange","Component","ImageGalleryItem","tags","webformatURL","largeImageURL","setModalImg","onClick","src","alt","Load","color","height","width","timeout","ImageGallery","images","status","toast","error","map","id","largeImageUR","Button","onLoadMore","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleOverlayClick","target","window","addEventListener","removeEventListener","createPortal","children","App","page","showModal","fetchImages","fetch","then","response","ok","json","Promise","reject","array","hits","prevState","handleScroll","catch","toggleModal","scrollTo","top","documentElement","scrollHeight","behavior","prevProps","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a510670e.chunk.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Searchbar extends Component {\n  state = {\n    query: '',\n  };\n\n  handleNameChange = e => {\n    this.setState({ query: e.currentTarget.value.toLowerCase() });\n    // console.log(e.currentTarget.value);\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { query } = this.state;\n\n    if (query.trim() === '') {\n      return;\n    }\n\n    this.props.onSubmit(query);\n    this.setState({ query: '' });\n  };\n\n  render() {\n    const { query } = this.state;\n\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            name=\"query\"\n            value={query}\n            onChange={this.handleNameChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nconst ImageGalleryItem = ({\n  tags,\n  webformatURL,\n  largeImageURL,\n  setModalImg,\n}) => {\n  return (\n    <li className=\"ImageGalleryItem\" onClick={setModalImg}>\n      <img\n        src={webformatURL}\n        alt={tags}\n        className=\"ImageGalleryItem-image\"\n        onClick={() => setModalImg({ largeImageURL, tags })}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  setModalImg: propTypes.func.isRequired,\n  tags: propTypes.string.isRequired,\n  webformatURL: propTypes.string.isRequired,\n  largeImageURL: propTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import React from 'react';\n\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst Load = () => {\n  return (\n    <Loader\n      type=\"Puff\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={3000} //3 secs\n    />\n  );\n};\n\nexport default Load;\n","import { Component } from 'react';\nimport propTypes from 'prop-types';\n\nimport { toast } from 'react-toastify';\n\nimport ImageGalleryItem from './ImageGalleryItem';\nimport Load from './Load';\n\nclass ImageGallery extends Component {\n  render() {\n    const { images, status, setModalImg } = this.props;\n\n    if (status === 'idle') {\n      return toast.error('Введите название изображения');\n    }\n\n    if (status === 'pending') {\n      return <Load />;\n    }\n\n    if (status === 'rejected') {\n      return toast.error('Упс! Что-то пошло не так');\n    }\n\n    if (status === 'resolved') {\n      return (\n        <ul className=\"ImageGallery\">\n          {images.map(({ webformatURL, largeImageURL, tags, id }) => (\n            <ImageGalleryItem\n              key={id}\n              tags={tags}\n              webformatURL={webformatURL}\n              largeImageUR={largeImageURL}\n              status={status}\n              setModalImg={setModalImg}\n            />\n          ))}\n        </ul>\n      );\n    }\n  }\n}\n\nImageGallery.propTypes = {\n  images: propTypes.array.isRequired,\n  status: propTypes.string.isRequired,\n  setModalImg: propTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ onLoadMore }) => {\n  return (\n    <button type=\"button\" onClick={onLoadMore}>\n      Load more\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport propTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', e => this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', e => this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleOverlayClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleOverlayClick}>\n        <div className=\"Modal\">{this.props.children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  onClose: propTypes.func.isRequired,\n  children: propTypes.node,\n};\n\nexport default Modal;\n","import { Component } from 'react';\nimport './App.css';\n\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\n\nclass App extends Component {\n  state = {\n    images: [],\n    query: '',\n    page: 1,\n    tags: null,\n    webformatURL: null,\n    largeImageURL: null,\n    error: null,\n    showModal: false,\n    status: 'idle',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevState.query;\n    const nextName = this.state.query;\n\n    if (prevName !== nextName) {\n      this.setState({ status: 'pending', images: [], page: 1 });\n\n      this.fetchImages();\n    }\n  }\n\n  fetchImages = () => {\n    const { query, page } = this.state;\n    const API_KEY = '22966044-c718c1bbe050e09f7279dea2f';\n\n    fetch(\n      `https://pixabay.com/api/?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n    )\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(\n          toast.error(`Нет изображения с названием ${query}`),\n        );\n      })\n      .then(array => {\n        const images = array.hits;\n\n        this.setState(prevState => ({\n          page: prevState.page + 1,\n          images: [...prevState.images, ...images],\n          status: 'resolved',\n        }));\n        if (page !== 1) {\n          this.handleScroll();\n        }\n      })\n      .catch(error => this.setState({ error, status: 'rejected' }));\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  setModalImg = ({ largeImageURL, tags }) => {\n    this.setState({ largeImageURL, tags });\n    this.toggleModal();\n  };\n\n  handleScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  onSubmit = query => {\n    this.setState({ query: query });\n  };\n\n  onLoadMore = () => {\n    this.fetchImages();\n  };\n\n  render() {\n    const { images, status, showModal, tags, largeImageURL } = this.state;\n\n    return (\n      <>\n        <Searchbar onSubmit={this.onSubmit} />\n        <ImageGallery\n          images={images}\n          status={status}\n          setModalImg={this.setModalImg}\n        />\n        {images.length > 0 && <Button onLoadMore={this.onLoadMore} />}\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img src={largeImageURL} alt={tags} />\n          </Modal>\n        )}\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}